<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/user/j/jade/git-src/sphinx-build-client/doc/index.rst" xmlns:xlink="http://www.w3.org/1999/xlink">
    <rel_links xlink:type="extended">
        <document_link xlink:href="True" xlink:role="http://heptet.us/linkprops/parent" xlink:title="Parent">
        </document_link>
        <document_link xlink:href="True" xlink:role="http://heptet.us/linkprops/next" xlink:title="Next topic">
        </document_link>
        <document_link xlink:href="True" xlink:role="http://heptet.us/linkprops/previous" xlink:title="Previous topic">
        </document_link>
    </rel_links>
    <container classes="local-toc">
        <bullet_list>
            <list_item>
                <compact_paragraph><reference anchorname="" internal="True" refuri="#">What it is</reference></compact_paragraph>
                <bullet_list>
                    <list_item>
                        <compact_paragraph><reference anchorname="#feedback-wanted" internal="True" refuri="#feedback-wanted">Feedback Wanted</reference></compact_paragraph>
                    </list_item>
                    <list_item>
                        <compact_paragraph><reference anchorname="#usage" internal="True" refuri="#usage">Usage</reference></compact_paragraph>
                    </list_item>
                    <list_item>
                        <compact_paragraph><reference anchorname="#security" internal="True" refuri="#security">Security</reference></compact_paragraph>
                    </list_item>
                    <list_item>
                        <compact_paragraph><reference anchorname="#performance" internal="True" refuri="#performance">Performance</reference></compact_paragraph>
                    </list_item>
                    <list_item>
                        <compact_paragraph><reference anchorname="#module-sphinxBuildClient" internal="True" refuri="#module-sphinxBuildClient">Reference</reference></compact_paragraph>
                    </list_item>
                </bullet_list>
            </list_item>
        </bullet_list>
    </container>
    <document_links>
        <document_link xlink:href="http://www.sphinx-doc.org" xlink:label="link_Sphinx" xlink:title="Sphinx">
        </document_link>
        <document_link xlink:href="https://bugs.chromium.org/p/v8/issues/detail?id=7381" xlink:label="link_7381" xlink:title="7381">
        </document_link>
    </document_links>
    <section ids="what-it-is" names="what\ it\ is">
        <title>What it is</title>
        <paragraph>This node.js module is an interface to the <reference name="Sphinx" refuri="http://www.sphinx-doc.org">Sphinx</reference> <emphasis>Python
                Documentation Generator</emphasis>.  It exists primarily to service the
            <title_reference>grunt-sphinx-plugin</title_reference> and for testing purposes. It is a very immature
            module and is missing key features. It does get the job done and it
            provides a Promise-based interface to sphinx-build while abstracting
            away some of the interprocess communication (IPC) details.</paragraph>
        <section ids="feedback-wanted" names="feedback\ wanted">
            <title>Feedback Wanted</title>
            <paragraph>You may think this module is silly or that it sucks. I might
                agree. But I am interested in any features or changes that make sense
                especially from the perspective of experienced JS developers.</paragraph>
        </section>
        <section ids="usage" names="usage">
            <title>Usage</title>
            <paragraph>General usage:</paragraph>
            <literal_block force_highlighting="False" language="js" linenos="False" xml:space="preserve">const sphinxBuildClient = require('sphinx-build-client');

sphinxBuildClient.sphinxBuild(sourceDir, outputDir, {
                  defineSettings: {
                      master_doc: 'index',
                      extensions: 'my-sphinx-extension',
                  },
                  noConfig: true,
                  builder: 'xml',
              }).then(theOutputDir =&gt; {
              /* Do something with output */
              }).catch(err =&gt; {
              /* Do something with error */
              });</literal_block>
            <paragraph>sphinxBuild returns a Promise which resolves to the ‘outdir’ argument.</paragraph>
        </section>
        <section ids="security" names="security">
            <title>Security</title>
            <paragraph>The usual caveats apply. Also, any conf.py file in the source
                directory will be evaluated by Sphinx and can execute arbitrary code.
                All input validation and sanitizing must be performed by the
                caller. Caveat emptor.</paragraph>
        </section>
        <section ids="performance" names="performance">
            <title>Performance</title>
            <paragraph>From the node docs:</paragraph>
            <paragraph>On UNIX-like operating systems, the child_process.spawn() method
                performs memory operations synchronously before decoupling the event
                loop from the child. Applications with a large memory footprint may
                find frequent child_process.spawn() calls to be a bottleneck. For more
                information, see V8 issue <reference name="7381" refuri="https://bugs.chromium.org/p/v8/issues/detail?id=7381">7381</reference>.</paragraph>
        </section>
        <section ids="module-sphinxBuildClient reference" names="reference">
            <title>Reference</title>
            <index entries='[["single", "sphinxBuildClient (module)", "module-sphinxBuildClient", "", null]]'></index>
            <index entries='[["single", "sphinxBuild() (built-in function)", "sphinxBuildClient.sphinxBuild", "", null]]'></index>
            <desc desctype="function" domain="js" noindex="False" objtype="function">
                <desc_signature first="False" fullname="sphinxBuild" ids="sphinxBuildClient.sphinxBuild" module="sphinxBuildClient" names="sphinxBuildClient.sphinxBuild" object="True"><desc_addname xml:space="preserve">sphinxBuildClient.</desc_addname><desc_name xml:space="preserve">sphinxBuild</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">srcdir</desc_parameter><desc_parameter xml:space="preserve">outdir</desc_parameter><desc_optional xml:space="preserve"><desc_parameter xml:space="preserve">options</desc_parameter></desc_optional></desc_parameterlist></desc_signature>
                <desc_content>
                    <field_list>
                        <field>
                            <field_name>Arguments</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong>srcdir</literal_strong> (<literal_emphasis>String</literal_emphasis>) – The source directory contining the Sphinx ReST source files.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>outdir</literal_strong> (<literal_emphasis>String</literal_emphasis>) – The output directory to receive the output files.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong>options</literal_strong> (<literal_emphasis>Object</literal_emphasis>) – Options for the build.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries='[["single", "options.forceAll (options attribute)", "sphinxBuildClient.options.forceAll", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.forceAll" ids="sphinxBuildClient.options.forceAll" module="sphinxBuildClient" names="sphinxBuildClient.options.forceAll" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">forceAll</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Boolean. Equiv. to supplying ‘-a’: write all files (default: only write new and changed files)</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.builder (options attribute)", "sphinxBuildClient.options.builder", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.builder" ids="sphinxBuildClient.options.builder" module="sphinxBuildClient" names="sphinxBuildClient.options.builder" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">builder</desc_name></desc_signature>
                <desc_content>
                    <paragraph>String. Builder to use (xml, html, epub, etc).</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.freshEnv (options attribute)", "sphinxBuildClient.options.freshEnv", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.freshEnv" ids="sphinxBuildClient.options.freshEnv" module="sphinxBuildClient" names="sphinxBuildClient.options.freshEnv" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">freshEnv</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Boolean. don’t use a saved environment, always read all files.</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.doctreeDir (options attribute)", "sphinxBuildClient.options.doctreeDir", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.doctreeDir" ids="sphinxBuildClient.options.doctreeDir" module="sphinxBuildClient" names="sphinxBuildClient.options.doctreeDir" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">doctreeDir</desc_name></desc_signature>
                <desc_content>
                    <paragraph>String. path for the cached environment and doctree files (default: <literal>OUTPUTDIR/.doctrees</literal>)</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.jobs (options attribute)", "sphinxBuildClient.options.jobs", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.jobs" ids="sphinxBuildClient.options.jobs" module="sphinxBuildClient" names="sphinxBuildClient.options.jobs" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">jobs</desc_name></desc_signature>
                <desc_content>
                    <paragraph>String. build in parallel with N processes where possible (special value <literal>auto</literal> will set <title_reference>N</title_reference> to cpu-count)</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.noConfig (options attribute)", "sphinxBuildClient.options.noConfig", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.noConfig" ids="sphinxBuildClient.options.noConfig" module="sphinxBuildClient" names="sphinxBuildClient.options.noConfig" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">noConfig</desc_name></desc_signature>
                <desc_content>
                    <paragraph>use no config file at all, only options specified in ‘defineSettings’ key.</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.defineSettings (options attribute)", "sphinxBuildClient.options.defineSettings", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.defineSettings" ids="sphinxBuildClient.options.defineSettings" module="sphinxBuildClient" names="sphinxBuildClient.options.defineSettings" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">defineSettings</desc_name></desc_signature>
                <desc_content>
                    <paragraph>An object supplying values for settings - will be transformed into -D key=value for each property.</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.defineHtmlTemplateVars (options attribute)", "sphinxBuildClient.options.defineHtmlTemplateVars", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.defineHtmlTemplateVars" ids="sphinxBuildClient.options.defineHtmlTemplateVars" module="sphinxBuildClient" names="sphinxBuildClient.options.defineHtmlTemplateVars" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">defineHtmlTemplateVars</desc_name></desc_signature>
                <desc_content>
                    <paragraph>An object supplying values for HTML template variaables. Transformed into -A key=value for each property.</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.tags (options attribute)", "sphinxBuildClient.options.tags", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.tags" ids="sphinxBuildClient.options.tags" module="sphinxBuildClient" names="sphinxBuildClient.options.tags" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">tags</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Array of String. define tag: include “only” blocks with TAG (<literal>-t</literal>)</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.quiet (options attribute)", "sphinxBuildClient.options.quiet", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.quiet" ids="sphinxBuildClient.options.quiet" module="sphinxBuildClient" names="sphinxBuildClient.options.quiet" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">quiet</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Boolean. no output on stdout, just warnings on stderr.</paragraph>
                </desc_content>
            </desc>
            <index entries='[["single", "options.reallyQuiet (options attribute)", "sphinxBuildClient.options.reallyQuiet", "", null]]'></index>
            <desc desctype="attribute" domain="js" noindex="False" objtype="attribute">
                <desc_signature first="False" fullname="options.reallyQuiet" ids="sphinxBuildClient.options.reallyQuiet" module="sphinxBuildClient" names="sphinxBuildClient.options.reallyQuiet" object="options"><desc_addname xml:space="preserve">options.</desc_addname><desc_name xml:space="preserve">reallyQuiet</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Boolean. no output at all, not even warnings</paragraph>
                </desc_content>
            </desc>
            <target ids="sphinx" names="sphinx" refuri="http://www.sphinx-doc.org"></target>
            <target ids="id1" names="7381" refuri="https://bugs.chromium.org/p/v8/issues/detail?id=7381"></target>
        </section>
    </section>
</document>
